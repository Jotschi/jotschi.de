--- 
layout: post
status: publish
published: true
title: Pandaboard OpenGL PowerVR CrossCompile On Debian
author: Jotschi
author_login: admin
author_email: webmaster@jotschi.de
author_url: http://www.Jotschi.de
excerpt: "This post is about how to compile the PowerVR SDK Examples within a Debian Linux Chroot environment. Sometimes you may not want to compile your sources on the target platform because of performance reasons. "
wordpress_id: 569
wordpress_url: /?p=569
date: 2011-07-07 00:45:28 +00:00
categories: 
- Uncategorized
tags: []

comments: []

---
This post is about how to compile the PowerVR SDK Examples within a Debian Linux Chroot environment. Sometimes you may not want to compile your sources on the target platform because of performance reasons. <a id="more"></a><a id="more-569"></a>

<strong>Notes about environment:</strong>
<i>
Debian Chroot Environment was using Debian Testing (Wheezy).
Pandaboard was running Ubuntu 11 (Natty)
PowerVR Library versions: 1.7.5.2+git20110610+9696932c.2-1
</i>

<strong>What do we need?</strong>
<i>
<ul>
<li>Pandaboard running Ubuntu 11 (Natty)</li>
<li>x86 (i386) Workstation running Debian</li>
<li><a href="http://ppa.launchpad.net/tiomap-dev/release/ubuntu/pool/main/p/pvr-omap4/">pvr-omap4 orig package</a> (e.g.: <a href="http://ppa.launchpad.net/tiomap-dev/release/ubuntu/pool/main/p/pvr-omap4/pvr-omap4_1.7.5.2+git20110610+9696932c.2.orig.tar.gz">pvr-omap4_1.7.5.2+git20110610+9696932c.2.orig.tar.gz</a>) </li>
<li>Imagination PowerVR <a href="http://www.imgtec.com/powervr/insider/sdkdownloads/index.asp">Khronos OpenGL ES 2.0 SDK</a> for Pandaboard</li>
</ul>
</i>



<h2>1. Create a chroot environment</h2>
At first we need a chroot environment in which we can compile our code against arm architecture. 
<pre class="syntax c">
# use debootstrap to create a chroot environment
debootstrap --arch=i386 testing rootfs/
# Switch into the chroot environment
chroot rootfs
# Install some basic tools
apt-get install vim less pdebuild-cross 
</pre>

<h2>2. Update our apt sources</h2>
Add the emdebian repository.
<pre class="syntax c">
echo "deb http://ftp.at.debian.org/debian/ testing main contrib non-free" > /etc/apt/sources.list
echo "deb http://www.emdebian.org/debian/ testing main" >> /etc/apt/sources.list 
apt-get install emdebian-archive-keyring
apt-get update
</pre>

<h3>3. Install the crosscompiler tools from emdebian repository</h3>
<pre class="syntax c">
apt-get install g++-4.4-arm-linux-gnueabi
apt-get install gcc-4.4-arm-linux-gnueabi
</pre>

<h3>4. Prepare the PowerVR SDK</h3>
<pre class="syntax c">
cd /opt/
# Download the powervr sdk and extract it in /opt
tar xfvz SDK_OGLES2_LINUX_ARMV7_2.08.28.0634.tar.gz 
# Replace one parameter that does not work with Debian Linux.
sed -i 's/arm-none-linux/arm-linux/' /opt/SDKPackage_OGLES2/Builds/OGLES2/LinuxARMV7/make_platform.mak  
</pre>

<h3>5. Get cross compile dependencies</h3>
<pre class="syntax c">
xapt -m -a armel libx11-dev
xapt -m -a armel libdrm-dev
</pre>

<h3>6. Store Settings</h3>
Contents of /opt/settings.inc
<pre class="syntax c">
#!/bin/bash
export X11BUILD=1
export PLATFORM=LinuxARMV7
export X11ROOT=/usr/include/
export CROSS_COMPILE=arm-linux-gnueabi-
</pre>

<h3>7. Compile example</h3>
<pre class="syntax c">
cd /opt/SDKPackage_OGLES2/TrainingCourse/03_Texturing/OGLES2/Build
# If . does not work use source to include the settings
. /opt/settings.inc
# Invoke the build
make
</pre>

<h3>8. Problems and issues<h3>
I transfered the binaries onto my pandaboard after i compiled the sources on my workstation. If i tried to execute them i got the following error:
<pre class="syntax c">
eglBindAPI failed (40740). 
</pre>

<h3>9. Fixes</h3>
I assume that the libraries which are included in the sdk are outdated. The libraries can be found here: <strong>SDKPackage_OGLES2/Builds/OGLES2/LinuxARMV7/Lib</strong>. I replaced them with a set of libraries which can be found at <a href="https://launchpad.net/~tiomap-dev">Launchpad TI Dev</a>. Those binaries are used to create the omap4 ubuntu packages. I used the pvr-omap4_1.7.5.2+git20110610+9696932c.2.orig.tar.gz archive.
<pre class="syntax c">
# Extract pvr-omap4 archive
cd /opt/
wget http://ppa.launchpad.net/tiomap-dev/release/ubuntu/pool/main/p/pvr-omap4/pvr-omap4_1.7.5.2+git20110610+9696932c.2.orig.tar.gz
tar xvfz pvr-omap4_1.7.5.2+git20110610+9696932c.2.orig.tar.gz 
# Replace Libs
cd /opt/SDKPackage_OGLES2/Builds/OGLES2/LinuxARMV7
mv Lib/ Lib.bak
ln -s /opt/pvr-omap4-1.7.5.2+git20110610+9696932c.2/usr/lib/ Lib
</pre>

After replacing the libraries and recompiling the examples worked just fine.
