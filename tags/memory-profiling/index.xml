<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memory Profiling on Jotschi&#39;s Blog</title>
    <link>http://jotschi.de/tags/memory-profiling/</link>
    <description>Recent content in Memory Profiling on Jotschi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jan 2009 00:20:03 +0000</lastBuildDate>
    <atom:link href="http://jotschi.de/tags/memory-profiling/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Remote Monitoring Heap Memory Usage Using JMX RMI</title>
      <link>http://jotschi.de/2009/01/26/remote-monitoring-heap-memory-usage-using-jmx-rmi/</link>
      <pubDate>Mon, 26 Jan 2009 00:20:03 +0000</pubDate>
      
      <guid>http://jotschi.de/2009/01/26/remote-monitoring-heap-memory-usage-using-jmx-rmi/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Perhaps you want to record the memory usage of your application during runtime? Here is how to do it within java iself. Note that you won&amp;#8217;t have to add code to your target application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An example application that will be monitored using jmx/rmi:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;package org.schueth.dummytest;

import java.util.ArrayList;

public class DummyApp {

	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception {
		ArrayList&amp;lt;String&amp;gt; anyList = new ArrayList&amp;lt;String&amp;gt;();
		while (true) {
			Thread.sleep(100);
			anyList.add(random());
		}
	}

	public static String random() {
		StringBuffer s = new StringBuffer();
		int i = 0;
		while (i &amp;lt; 400) {
			s.append((char) (int) (Math.random() * 10 + 65));
			i++;
		}
		return s.toString();
	}

}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The application that will read the MemoryMXBean information:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;package org.schueth.jmx;

import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import javax.management.MBeanServerConnection;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;

public class JMXTest {

	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception {

		JMXServiceURL u = new JMXServiceURL(
				&#34;service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi&#34;);
		JMXConnector c = JMXConnectorFactory.connect(u);
		MBeanServerConnection mbsc = c.getMBeanServerConnection();

		MemoryMXBean mbean = ManagementFactory.newPlatformMXBeanProxy(mbsc,
				ManagementFactory.MEMORY_MXBEAN_NAME, MemoryMXBean.class);

		while (true) {
			System.out.println(mbean.getHeapMemoryUsage());
			System.out.println(mbean.getNonHeapMemoryUsage());
			Thread.sleep(100);
		}

	}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Start the DummyApp with the folling params using at least java 1.5:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;java -D -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.port=9999  -Dcom.sun.management.jmxremote.ssl=false  -cp bin org.schueth.dummytest.DummyApp&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>