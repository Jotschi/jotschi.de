<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google on Jotschi&#39;s Blog</title>
    <link>http://jotschi.de/tags/google/</link>
    <description>Recent content in Google on Jotschi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Dec 2009 23:45:12 +0000</lastBuildDate>
    <atom:link href="http://jotschi.de/tags/google/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Minimal Google Docs Java Client</title>
      <link>http://jotschi.de/2009/12/06/minimal-google-docs-java-client/</link>
      <pubDate>Sun, 06 Dec 2009 23:45:12 +0000</pubDate>
      
      <guid>http://jotschi.de/2009/12/06/minimal-google-docs-java-client/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This code demonstrates how to fetch docs via google docs java api.
This example is usable with the &amp;lt;a href=&#34;http://code.google.com/p/gdata-java-client/&#34;&amp;gt;gdata-java-client&amp;lt;/a&amp;gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;

import com.google.gdata.client.GoogleService;
import com.google.gdata.client.GoogleAuthTokenFactory.UserToken;
import com.google.gdata.client.docs.DocsService;
import com.google.gdata.data.MediaContent;
import com.google.gdata.data.media.MediaSource;

public class MinimalGoogleDocsClient {

	private static final String APPLICATION_NAME = &#34;JavaGDataClientSampleAppV3.0&#34;;
	public static final String SPREADSHEETS_SERVICE_NAME = &#34;wise&#34;;
	public DocsService service;
	public GoogleService spreadsheetsService;

	public void getSpreadSheet(String id) throws Exception {
		UserToken docsToken = (UserToken) service.getAuthTokenFactory()
				.getAuthToken();
		UserToken spreadsheetsToken = (UserToken) spreadsheetsService
				.getAuthTokenFactory().getAuthToken();
		service.setUserToken(spreadsheetsToken.getValue());

		URL url = new URL(
				&#34;http://spreadsheets.google.com/feeds/download/spreadsheets/Export?gid=0&amp;amp;exportFormat=csv&amp;amp;key=&#34;
						+ id);

		readUrl(url);
		service.setUserToken(docsToken.getValue());
	}

	public void getDocument(String id) throws Exception {
		URL url = new URL(
				&#34;http://docs.google.com/feeds/download/documents/Export?docID=document:&#34;
						+ id + &#34;&amp;amp;exportFormat=txt&#34;);
		readUrl(url);
	}

	public void readUrl(URL url) throws Exception {
		MediaContent mc = new MediaContent();
		mc.setUri(url.toString());
		MediaSource ms = service.getMedia(mc);

		BufferedReader in = new BufferedReader(new InputStreamReader(ms
				.getInputStream()));

		String inputLine;
		while ((inputLine = in.readLine()) != null) {
			System.out.println(inputLine);
		}

	}

	public void go() throws Exception {
		String user = &#34;YOURUSERNAME&#34;;
		String pass = &#34;YOURPASS&#34;;

		service = new DocsService(APPLICATION_NAME);
		spreadsheetsService = new GoogleService(SPREADSHEETS_SERVICE_NAME,
				APPLICATION_NAME);

		service.setUserCredentials(user, pass);
		spreadsheetsService.setUserCredentials(user, pass);

		getSpreadSheet(&#34;0ApGHrBnaasfKdDJSaUc0TSEzcmZXb0Z5MU9JN3ZuUXc&#34;);

		getDocument(&#34;0AZGHrBnasfsasKZGQ1OXdqbTafsasfWYydHE5OWRk&#34;);

	}

	public static void main(String[] args) throws Exception {

		new MinimalGoogleDocsClient().go();

	}

}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>